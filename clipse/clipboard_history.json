{"clipboardHistory":[{"value":"# ","recorded":"2024-12-31 01:04:03.543897973","filePath":"null","pinned":false},{"value":"exec-once = waybar","recorded":"2024-12-31 01:03:40.178593732","filePath":"null","pinned":false},{"value":"sudo systemctl restart bluetooth\n","recorded":"2024-12-31 01:00:45.135048607","filePath":"null","pinned":false},{"value":"sudo udevadm control --reload-rules\nsudo udevadm trigger\n","recorded":"2024-12-31 01:00:21.556600466","filePath":"null","pinned":false},{"value":"ps aux | grep polkit\n","recorded":"2024-12-31 00:45:47.568615148","filePath":"null","pinned":false},{"value":"kill \u003cPID_of_running_polkit_agent\u003e\n","recorded":"2024-12-31 00:45:46.765328787","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1\nCannot register authentication agent: GDBus.Error:org.freedesktop.PolicyKit1.Error.Failed: An authentication agent already exists for the given subject","recorded":"2024-12-31 00:45:36.492089230","filePath":"null","pinned":false},{"value":"Cannot register authentication agent: GDBus.Error:org.freedesktop.PolicyKit1.Error.Failed: An authentication agent already exists for the given subject","recorded":"2024-12-31 00:44:54.361551767","filePath":"null","pinned":false},{"value":"/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1","recorded":"2024-12-31 00:44:07.243823544","filePath":"null","pinned":false},{"value":"find / -name polkit-gnome-authentication-agent-1 2\u003e/dev/null\n","recorded":"2024-12-31 00:43:48.898671397","filePath":"null","pinned":false},{"value":"bash: /usr/libexec/polkit-gnome-authentication-agent-1: No such file or directory","recorded":"2024-12-31 00:43:36.927587400","filePath":"null","pinned":false},{"value":"exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1\n","recorded":"2024-12-31 00:43:25.475659779","filePath":"null","pinned":false},{"value":"systemctl --user enable --now polkit.service\n","recorded":"2024-12-31 00:42:49.628445591","filePath":"null","pinned":false},{"value":"/usr/libexec/polkit-gnome-authentication-agent-1\n","recorded":"2024-12-31 00:42:31.722825061","filePath":"null","pinned":false},{"value":"exec-once = polkit-agent\n","recorded":"2024-12-31 00:41:02.552539493","filePath":"null","pinned":false},{"value":"sudo pacman -S polkit polkit-gnome\n","recorded":"2024-12-31 00:39:52.938516795","filePath":"null","pinned":false},{"value":"cat /etc/group","recorded":"2024-12-31 00:34:27.474766285","filePath":"null","pinned":false},{"value":"find / -user user","recorded":"2024-12-31 00:34:10.312388983","filePath":"null","pinned":false},{"value":"51-blueman.rules","recorded":"2024-12-31 00:31:37.190154370","filePath":"null","pinned":false},{"value":"/etc/polkit-1/rules.d/","recorded":"2024-12-31 00:29:20.503443752","filePath":"null","pinned":false},{"value":"/etc/polkit-1/rules.d/51-blueman.rules","recorded":"2024-12-31 00:29:13.481106932","filePath":"null","pinned":false},{"value":"/* Allow users in wheel group to use blueman feature requiring root without authentication */\npolkit.addRule(function(action, subject) {\n    if ((action.id == \"org.blueman.network.setup\" ||\n         action.id == \"org.blueman.dhcp.client\" ||\n         action.id == \"org.blueman.rfkill.setstate\" ||\n         action.id == \"org.blueman.pppd.pppconnect\") \u0026\u0026\n        subject.isInGroup(\"wheel\")) {\n\n        return polkit.Result.YES;\n    }\n});","recorded":"2024-12-31 00:28:43.810428437","filePath":"null","pinned":false},{"value":"/etc/dbus-1/system.d/bluetooth.conf","recorded":"2024-12-31 00:27:08.286914628","filePath":"null","pinned":false},{"value":"~/.config/hypr/hyprlock.conf","recorded":"2024-12-31 00:09:03.641508512","filePath":"null","pinned":false},{"value":"installing hyprutils (0.3.0-1) breaks dependency 'libhyprutils.so=1-64' required by aquamarine","recorded":"2024-12-30 23:49:34.871127323","filePath":"null","pinned":false},{"value":"/usr/share/sddm/themes/sugar-candy/Backgrounds","recorded":"2024-12-30 21:12:22.024245993","filePath":"null","pinned":false},{"value":"/home/miguel/Pictures/wallpaper/cyber.jpg","recorded":"2024-12-30 21:12:09.299914183","filePath":"null","pinned":false},{"value":"Cousine Nerd Font Mono ","recorded":"2024-12-30 21:05:18.148364136","filePath":"null","pinned":false},{"value":"b0c4ded9","recorded":"2024-12-30 21:04:49.871324937","filePath":"null","pinned":false},{"value":" #1c1c1c","recorded":"2024-12-30 21:03:52.153737705","filePath":"null","pinned":false},{"value":"/home/miguel/Pictures/wallpaper/","recorded":"2024-12-30 21:02:21.528996415","filePath":"null","pinned":false},{"value":"wlr-randr","recorded":"2024-12-30 20:24:33.965584149","filePath":"null","pinned":false},{"value":"hyprctl monitors","recorded":"2024-12-30 20:24:06.863479795","filePath":"null","pinned":false},{"value":"/var/lib/sddm/.config/kwinoutputconfig.json","recorded":"2024-12-30 20:22:25.045382915","filePath":"null","pinned":false},{"value":"sudo journalctl -b | grep Output --color=always","recorded":"2024-12-30 20:21:03.905658071","filePath":"null","pinned":false},{"value":"xrandr --output HDMI-1 --off","recorded":"2024-12-30 20:06:30.476208312","filePath":"null","pinned":false},{"value":"/usr/share/sddm/scripts/Xsetup","recorded":"2024-12-30 20:06:19.948296072","filePath":"null","pinned":false},{"value":"xrandr | grep -w connected","recorded":"2024-12-30 20:05:51.746744149","filePath":"null","pinned":false},{"value":"/etc/sddm.conf.d/10-wayland.conf","recorded":"2024-12-30 20:02:53.806730350","filePath":"null","pinned":false},{"value":"sugar-candy","recorded":"2024-12-30 20:00:40.430576127","filePath":"null","pinned":false},{"value":"/usr/lib/sddm/sddm.conf.d/default.conf","recorded":"2024-12-30 19:59:47.081158006","filePath":"null","pinned":false},{"value":"[General]\nHaltCommand=/usr/bin/systemctl poweroff\nRebootCommand=/usr/bin/systemctl reboot\nDisplayServer=wayland\nGreeterEnvironment=QT_WAYLAND_SHELL_INTEGRATION=layer-shell\n\n[Wayland]\nCompositorCommand=Hyprland\n\n[Users]\nMaximumUid=60513\nMinimumUid=1000","recorded":"2024-12-30 19:58:18.958909802","filePath":"null","pinned":false},{"value":"/var/lib/sddm/.config/hypr","recorded":"2024-12-30 19:57:55.802349385","filePath":"null","pinned":false},{"value":"grep wheel /etc/group","recorded":"2024-12-30 11:40:16.308138691","filePath":"null","pinned":false},{"value":"/etc/polkit-1/rules.d/51-blueman.rule","recorded":"2024-12-30 11:39:09.845541732","filePath":"null","pinned":false},{"value":"/* Allow users in wheel group to use blueman feature requiring root without authentication */\npolkit.addRule(function(action, subject) {\n    if ((action.id == \"org.blueman.network.setup\" ||\n         action.id == \"org.blueman.dhcp.client\" ||\n         action.id == \"org.blueman.rfkill.setstate\" ||\n         action.id == \"org.blueman.pppd.pppconnect\") \u0026\u0026\n        subject.isInGroup(\"wheel\")) {\n        return polkit.Result.YES;\n    }\n});","recorded":"2024-12-30 11:34:37.075063938","filePath":"null","pinned":false},{"value":"/usr/share/polkit-1/rules.d/","recorded":"2024-12-30 11:33:11.871188485","filePath":"null","pinned":false},{"value":"systemctl start bluetooth","recorded":"2024-12-30 11:30:04.854691395","filePath":"null","pinned":false},{"value":"bluetoothctl","recorded":"2024-12-30 11:29:34.146950263","filePath":"null","pinned":false},{"value":"/var/log/pacman.log","recorded":"2024-12-30 02:58:45.316983154","filePath":"null","pinned":false},{"value":"cpi_backlight=vendor acpi_osi=linux video.brightness_switch_enabled=1","recorded":"2024-12-30 02:37:34.123555235","filePath":"null","pinned":false},{"value":"cat /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode","recorded":"2024-12-30 02:34:25.112376731","filePath":"null","pinned":false},{"value":"echo 1 \u003e /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode","recorded":"2024-12-30 02:34:17.787810156","filePath":"null","pinned":false},{"value":"cat /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode\n","recorded":"2024-12-30 02:34:04.619812202","filePath":"null","pinned":false},{"value":"echo '\\_SB.PCI0.LPC0.EC0.VPC0.SBMC 0x03' \u003e /proc/acpi/call","recorded":"2024-12-30 02:33:59.810145834","filePath":"null","pinned":false},{"value":"modprobe acpi_call","recorded":"2024-12-30 02:32:37.966509843","filePath":"null","pinned":false},{"value":"acpi_call-dkms","recorded":"2024-12-30 02:27:03.607560801","filePath":"null","pinned":false},{"value":"sudo bt-dualboot -b --sync-all","recorded":"2024-12-30 02:00:20.433590289","filePath":"null","pinned":false},{"value":"f2e012d4cabd","recorded":"2024-12-30 00:53:02.899890060","filePath":"null","pinned":false},{"value":"d3c16e066df3","recorded":"2024-12-30 00:50:55.121995708","filePath":"null","pinned":false},{"value":"386893edbe7a","recorded":"2024-12-30 00:47:58.248033856","filePath":"null","pinned":false},{"value":"sudo bash -c 'cp -r ./bluetooth /var/lib \u0026\u0026 service bluetooth force-reload'","recorded":"2024-12-30 00:40:14.047336022","filePath":"null","pinned":false},{"value":"#!/usr/bin/python3\n\"\"\"\nCopyright 2021 Mygod\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nWhat is this: Export your Windows Bluetooth LE keys into Linux!\n\nThanks to:\n* http://console.systems/2014/09/how-to-pair-low-energy-le-bluetooth.html\n* https://gist.github.com/corecoding/eac76d3da20c7e427a1848b8aed8e334/revisions#diff-6eeb0d27c24cc10680e8574f75648585\n\nUsage:\n\n$ ./export-ble-infos.py \u003cargs\u003e\n$ sudo bash -c 'cp -r ./bluetooth /var/lib \u0026\u0026 service bluetooth force-reload'\n$ rm -r bluetooth\n\"\"\"\n\nimport os\nimport shutil\nimport subprocess\nimport sys\nimport tempfile\n\nfrom configparser import ConfigParser\nfrom optparse import OptionParser\n\ndefault_template = \"\"\"\n[General]\nName=Designer Mouse\nAppearance=0x03c2\nAddressType=static\nSupportedTechnologies=LE;\nTrusted=true\nBlocked=false\nServices=00001800-0000-1000-8000-00805f9b34fb;00001801-0000-1000-8000-00805f9b34fb;0000180a-0000-1000-8000-00805f9b34fb;0000180f-0000-1000-8000-00805f9b34fb;00001812-0000-1000-8000-00805f9b34fb;\n\n[IdentityResolvingKey]\nKey=\n\n[LocalSignatureKey]\nKey=\nCounter=0\nAuthenticated=false\n\n[LongTermKey]\nKey=\nAuthenticated=0\nEncSize=16\nEDiv=\nRand=\n\n[DeviceID]\nSource=2\nVendor=1118\nProduct=2053\nVersion=272\n\n[ConnectionParameters]\nMinInterval=6\nMaxInterval=6\nLatency=60\nTimeout=300\n\"\"\"\n\n\ndef main():\n    parser = OptionParser()\n    parser.add_option(\"-v\", \"--verbose\", action='store_true', dest='verbose')\n    parser.add_option(\"-s\", \"--system\", dest=\"system\", metavar=\"FILE\",\n                      default=\"/mnt/Windows/System32/config/SYSTEM\",\n                      help=\"SYSTEM file in Windows. Usually at /Windows/System32/config/system.\")\n    parser.add_option(\"-k\", \"--key\", dest=\"key\", metavar=\"KEY\",\n                      default=r\"ControlSet001\\Services\\BTHPORT\\Parameters\\Keys\",\n                      help=\"Registry key for BT. [default: %default]\")\n    parser.add_option(\"-o\", \"--output\", dest=\"output\", metavar=\"DIR\", default=\"bluetooth\",\n                      help=\"Output directory. [default: %default]\")\n    parser.add_option(\"-t\", \"--template\", dest=\"template\", metavar=\"FILE\", help=\"Template file.\")\n    parser.add_option(\"-a\", \"--attributes\", dest='attributes', help=\"Additional attributes file to be copied.\")\n    options, args = parser.parse_args()\n\n    if options.template:\n        with open(options.template) as file:\n            template = file.read()\n    else:\n        template = default_template\n\n    out = tempfile.mktemp(\".reg\")\n    reged = subprocess.Popen([\"reged\", \"-x\", options.system, '\\\\', options.key, out], stdout=sys.stderr)\n    reged.wait()\n    if reged.returncode:\n        return reged.returncode\n    dump = ConfigParser()\n    with open(out) as file:\n        reged_out = file.read()\n        if options.verbose:\n            print(reged_out)\n        dump.read_string(reged_out.split('\\n', 1)[1])\n    os.unlink(out)\n\n    for section in dump:\n        path = section[len(options.key) + 2:].split('\\\\')\n        assert not path[0]\n        if len(path) == 3:\n            path[1] = ':'.join([path[1][i:i + 2] for i in range(0, len(path[1]), 2)]).upper()\n            path[2] = ':'.join([path[2][i:i + 2] for i in range(0, len(path[2]), 2)]).upper()\n            print(\"Dumping {}/{}...\".format(path[1], path[2]))\n            config = ConfigParser()\n            config.optionxform = str\n\n            # See if device has been paired in Linux before\n            existing_template = '/var/lib/bluetooth/{}/{}/info'.format(path[1], path[2])\n            if (os.path.exists(existing_template)):\n                with open(existing_template) as file:\n                    config.read_string(file.read())\n            else:\n                config.read_string(template)\n\n            def read_reg(key, expected_type):\n                def read_reg_actual(key, expected_type):\n                    actual_type, content = dump[section]['\"{}\"'.format(key)].split(':', 1)\n                    if expected_type == 'hex16':\n                        assert actual_type == 'hex'\n                        content = content.split(',')\n                        assert len(content) == 16\n                        return ''.join(content).upper()\n                    if expected_type == 'qword':\n                        assert actual_type == 'hex(b)'\n                        content = content.split(',')\n                        assert len(content) == 8\n                        return str(int(''.join(content[::-1]), 16))\n                    if expected_type == 'dword':\n                        assert actual_type == expected_type\n                        return str(int(content, 16))\n                    assert False\n                result = read_reg_actual(key, expected_type)\n                if options.verbose:\n                    print(\"{} of type {}: {}\".format(key, expected_type, result))\n                return result\n            config['LongTermKey']['Key'] = read_reg('LTK', 'hex16')\n            # KeyLength ignored for now\n            config['LongTermKey']['Rand'] = read_reg('ERand', 'qword')\n            config['LongTermKey']['EDiv'] = read_reg('EDIV', 'dword')\n            if '\"IRK\"' in dump[section]:\n                config['IdentityResolvingKey']['Key'] = read_reg('IRK', 'hex16')\n            if '\"CSRK\"' in dump[section]:\n                config['LocalSignatureKey']['Key'] = read_reg('CSRK', 'hex16')\n            output_dir = os.path.join(options.output, path[1], path[2])\n            os.makedirs(output_dir, exist_ok=True)\n            with open(os.path.join(output_dir, 'info'), 'w') as file:\n                config.write(file, False)\n            if options.attributes:\n                shutil.copyfile(options.attributes, os.path.join(output_dir, 'attributes'))\n\n\nif __name__ == \"__main__\":\n    sys.exit(main())\n","recorded":"2024-12-30 00:24:56.790210612","filePath":"null","pinned":false},{"value":"LinkKey'","recorded":"2024-12-30 00:09:50.000150709","filePath":"null","pinned":false},{"value":" systemctl start bluetooth ","recorded":"2024-12-30 00:07:34.928871539","filePath":"null","pinned":false},{"value":"systemctl status bluetooth ","recorded":"2024-12-30 00:07:23.082960128","filePath":"null","pinned":false},{"value":"ystemctl status bluetooth ","recorded":"2024-12-30 00:07:18.578378210","filePath":"null","pinned":false},{"value":" sudo sv start bluetoothd ","recorded":"2024-12-30 00:06:17.675773259","filePath":"null","pinned":false},{"value":"bluez-deprecated-tools","recorded":"2024-12-29 23:52:53.880779477","filePath":"null","pinned":false},{"value":"$ sudo bt-dualboot -l\n\nWorks both in Linux and Windows\n===============================\n [A4:BF:C6:D0:E5:FF] WH-1000XM4\n\nNeeds sync\n==========\n\nFollowing devices available for sync with `--sync-all` or `--sync MAC` options.\n\n [C2:9E:1D:E2:3D:A5] Keyboard K380\n\nHave to be paired in Windows\n============================\n\nFollowing devices unavailable for sync unless you boot Windows and pair them\n\n [E9:1D:FE:2A:C3:C8] JBL GO\n","recorded":"2024-12-29 23:47:40.665431500","filePath":"null","pinned":false},{"value":"$ sudo bt-dualboot --sync-all\n\nSyncing...\n==========\n [C2:9E:1D:E2:3D:A5] Keyboard K380\n...done\n","recorded":"2024-12-29 23:46:49.371364179","filePath":"null","pinned":false},{"value":"/run/media/miguel/Windows-SSD/Windows/System32/config","recorded":"2024-12-29 23:41:46.379418586","filePath":"null","pinned":false},{"value":"exec-once = systemctl --user start hyprpolkitagent","recorded":"2024-12-29 23:35:27.376080462","filePath":"null","pinned":false},{"value":"pkaction --verbose | more","recorded":"2024-12-29 23:34:40.121131424","filePath":"null","pinned":false},{"value":"The PolicyKit authentication system appears to be not available.: Not authorized to perform operation","recorded":"2024-12-29 23:34:14.938609711","filePath":"null","pinned":false},{"value":": installing poppler (24.12.0-1) breaks dependency 'poppler=24.11.0' required by poppler-glib","recorded":"2024-12-29 23:31:27.768726433","filePath":"null","pinned":false},{"value":"policykit-1-gnome","recorded":"2024-12-29 22:56:25.838037620","filePath":"null","pinned":false},{"value":"xhost si:localuser:root \u0026\u0026 sudo sudo; sudo gparted \u0026 sleep 1 \u0026\u0026 xhost -si:localuser:root","recorded":"2024-12-29 22:07:50.636972861","filePath":"null","pinned":false},{"value":"/run/media/miguel/Ventoy/Activar Windows y Office.txt\n/run/media/miguel/Ventoy/boot-repair-disk-64bit.iso\n/run/media/miguel/Ventoy/DATOS NUEVOS.xlsx\n/run/media/miguel/Ventoy/Office_2019_C2R_ISO_16.0.10827.20138_09.30.2018-20.07.24.rar\n/run/media/miguel/Ventoy/OFFICE 365 - 2019 Pro Plus + Activador x32 \u0026 x64 Bits Full Like Sistem LS.rar\n/run/media/miguel/Ventoy/Puede la inteligencia artificial tener consciencia.docx\n/run/media/miguel/Ventoy/Universidad\n/run/media/miguel/Ventoy/Win7 x32 x64.rar","recorded":"2024-12-29 22:02:15.271883798","filePath":"null","pinned":false},{"value":"Backlight is not adjustable","recorded":"2024-12-29 16:34:59.648639720","filePath":"null","pinned":false},{"value":"i915.fastboot=1","recorded":"2024-12-29 16:14:43.804016015","filePath":"null","pinned":false},{"value":"Windows 2020","recorded":"2024-12-29 16:11:41.217421815","filePath":"null","pinned":false},{"value":"\nacpi_osi=\"!Windows 2012\"","recorded":"2024-12-29 16:08:19.700450757","filePath":"null","pinned":false},{"value":"ideapad_acpi VPC2004:00: Keyboard backlight control not availab","recorded":"2024-12-29 14:25:38.324558752","filePath":"null","pinned":false},{"value":"ideapad_laptop.allow_v4_dytc=Y ","recorded":"2024-12-29 13:59:08.687586253","filePath":"null","pinned":false},{"value":" ideapad_laptop.allow_v4_dytc=1","recorded":"2024-12-29 13:55:10.326772841","filePath":"null","pinned":false},{"value":"at /proc/cmdline","recorded":"2024-12-29 13:54:03.898532650","filePath":"null","pinned":false},{"value":"ideapad_acpi VPC2004:00: Keyboard backlight control not available","recorded":"2024-12-29 13:50:26.877184839","filePath":"null","pinned":false},{"value":"ideapad_laptop.allow_v4_dytc=Y","recorded":"2024-12-29 13:48:08.006311825","filePath":"null","pinned":false},{"value":"dmesg | grep -i acpi","recorded":"2024-12-29 13:47:13.419327436","filePath":"null","pinned":false},{"value":"acpidump -b \u0026\u0026 for i in *; do echo $i:; strings -a $i | grep -i windows; done","recorded":"2024-12-29 13:46:20.119958499","filePath":"null","pinned":false},{"value":"/etc/udev/rules.d/81-backlight.rules","recorded":"2024-12-29 13:23:48.394825836","filePath":"null","pinned":false},{"value":"\n# modprobe ideapad_laptop allow_v4_dytc=1","recorded":"2024-12-29 13:20:56.514315486","filePath":"null","pinned":false},{"value":"ideapad_laptop.allow_v4_dytc=1","recorded":"2024-12-29 13:19:13.095320373","filePath":"null","pinned":false},{"value":"sudo pacman -S qt5-base acpi_call pyside2 polkit","recorded":"2024-12-29 13:16:30.658160618","filePath":"null","pinned":false},{"value":" journalctl -k | grep -i \"brightness\\|backlight\\|pwm\" ","recorded":"2024-12-29 13:12:35.184349614","filePath":"null","pinned":false},{"value":"/etc/initramfs-tools/modules","recorded":"2024-12-29 13:11:58.917636724","filePath":"null","pinned":false},{"value":"inxi -Fa --za","recorded":"2024-12-29 13:09:10.421228571","filePath":"null","pinned":false},{"value":"000000] Command line: BOOT_IMAGE=/vmlinuz-linux-mainline root=UUID=6eed11fa-f3eb-4fa1-8831-5a2412740bc5 rw zswap.enabled=0 rootfstype=ext4 quiet splash acpi_backlight=vendor\n[    0.075890] Kernel command line: BOOT_IMAGE=/vmlinuz-linux-mainline root=UUID=6eed11fa-f3eb-4fa1-8831-5a2412740bc5 rw zswap.enabled=0 rootfstype=ext4 quiet splash acpi_backlight=vendor\n[    3.056290] i915 0000:00:02.0: [drm] Skipping intel_backlight registration\n[   11.542389] ideapad_acpi VPC2004:00: Keyboard backlight control not available","recorded":"2024-12-29 13:05:16.536232721","filePath":"null","pinned":false},{"value":"dmesg | grep backlight\n","recorded":"2024-12-29 13:04:53.056387262","filePath":"null","pinned":false}]}